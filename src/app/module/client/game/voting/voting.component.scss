// Custom keyframe animations not available in Tailwind
@keyframes vote-pulse {
  0%,
  100% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba(34, 197, 94, 0.7);
  }
  50% {
    transform: scale(1.05);
    box-shadow: 0 0 0 10px rgba(34, 197, 94, 0);
  }
}

@keyframes remove-vote-pulse {
  0%,
  100% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba(239, 68, 68, 0.7);
  }
  50% {
    transform: scale(1.05);
    box-shadow: 0 0 0 10px rgba(239, 68, 68, 0);
  }
}

@keyframes fade-in-up {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes bounce-in {
  0% {
    transform: scale(0.8);
    opacity: 0;
  }
  50% {
    transform: scale(1.1);
    opacity: 0.8;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes winner-pulse {
  0%,
  100% {
    opacity: 0.5;
    transform: scale(1);
  }
  50% {
    opacity: 0.8;
    transform: scale(1.02);
  }
}

@keyframes winner-glow {
  0% {
    box-shadow: 0 4px 15px rgba(255, 215, 0, 0.4);
  }
  100% {
    box-shadow: 0 6px 20px rgba(255, 215, 0, 0.7);
  }
}

@keyframes shimmer {
  0% {
    background-position: -200px 0;
  }
  100% {
    background-position: calc(200px + 100%) 0;
  }
}

// Custom utility classes using Tailwind patterns
.vote-pulse {
  animation: vote-pulse 1s infinite;
}

.remove-vote-pulse {
  animation: remove-vote-pulse 1s infinite;
}

.animate-fade-in-up {
  animation: fade-in-up 0.5s ease-in;
}

.animate-bounce-in {
  animation: bounce-in 0.5s ease-out;
}

.animate-winner-pulse {
  animation: winner-pulse 2s ease-in-out infinite;
}

.animate-winner-glow {
  animation: winner-glow 2s ease-in-out infinite alternate;
}

.animate-shimmer {
  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
  background-size: 200px 100%;
  animation: shimmer 2s infinite;
}

// Voting card shimmer effect
.voting-card {
  position: relative;
  overflow: hidden;

  &::before {
    content: "";
    position: absolute;
    inset: 0;
    transform: translateX(-100%);
    background: linear-gradient(
      to right,
      transparent,
      rgba(255, 255, 255, 0.1),
      transparent
    );
    transition: transform 0.5s;
  }

  &:hover::before {
    transform: translateX(100%);
  }
}
